what is MongoDB?
     MongoDB is an open-source, cross-platform, and is based on No-SQL Database.

WHAT IS Aggregation Pipeline?

    In MongoDB, the Aggregation Pipeline is a set of stages that allow you to filter, transform, and 
    analyze data in a collection. Each stage in the pipeline performs a specific operation on the data,
    such as filtering, grouping, sorting, and calculating aggregate values.

    The Aggregation Pipeline is comprised of several stages, each of which takes a set of documents as input,
    performs some operation on them, and then passes the output to the next stage. The final output is the result
    of all the stages in the pipeline

    Some common stages used in the Aggregation Pipeline include:

        $match: Filters documents based on a specified condition.
        $group: Groups documents together based on a specified key and performs aggregate calculations on the grouped documents.
        $project: Modifies the document fields and includes or excludes fields from the output.
        $sort: Sorts documents based on a specified field.


WHAT IS mongoDB data type?
        .null
        .Boolean
        .Number [
            {
        "year": NumberInt("2020"),
        "words": NumberLong("95403")
            }
            ]
        .String 
        .Date
        .Regular expression
        .Array
        .Object ID [
                    The ObjectId class is the default type for "_id". It is used to generate unique values globally across servers.
                    The ObjectId uses 12 bytes for storage, where each byte represents 2 hexadecimal digits. In total, an
                    ObjectId is 24 hexadecimal digits.
                    The 12-byte ObjectId value consists of:

                            A 4-byte timestamp value that represents the ObjectIdâ€˜s generated time measured in seconds since the Unix epoch.
                            A 5-byte random value.
                            A 3-byte increment counter, initialized to a random value.



        ]
    .Embeded Document[
        EXAM:
                {
            "title": "MongoDB Tutorial",
            "pages": 945,
            "author": { //author is embede document because value of document can be another document that referred as Embeded Document
            "first_name": "John",
            "last_name": "Doe"
                 }
              }
    ]
